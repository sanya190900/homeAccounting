{"ast":null,"code":"import { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { Category } from '../../models/category/category.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/categories/categories.service\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/flex-layout/flex\";\nimport * as i5 from \"@angular/material/form-field\";\nimport * as i6 from \"@angular/material/select\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"@angular/material/icon\";\nimport * as i9 from \"@angular/material/core\";\nimport * as i10 from \"@angular/material/input\";\nimport * as i11 from \"@angular-material-components/datetime-picker\";\nimport * as i12 from \"@angular/material/datepicker\";\nimport * as i13 from \"@angular/material/button\";\nimport * as i14 from \"../../models/transaction/transaction.model\";\n\nfunction DialogBoxComponent_h1_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\", 6);\n    i0.ɵɵtext(1, \"Adding new transaction\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction DialogBoxComponent_h1_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\", 6);\n    i0.ɵɵtext(1, \"Updating current transaction\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction DialogBoxComponent_h1_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\", 6);\n    i0.ɵɵtext(1, \"Are you sure to remove current transaction?\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction DialogBoxComponent_div_3_mat_option_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 25, 26)(2, \"mat-icon\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const category_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r6);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(category_r6.icon);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(category_r6.name);\n  }\n}\n\nfunction DialogBoxComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 7)(1, \"div\", 8)(2, \"div\", 9)(3, \"div\", 10);\n    i0.ɵɵelement(4, \"img\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 12)(6, \"mat-form-field\", 13)(7, \"mat-label\");\n    i0.ɵɵtext(8, \"Category\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"mat-select\", 14);\n    i0.ɵɵlistener(\"ngModelChange\", function DialogBoxComponent_div_3_Template_mat_select_ngModelChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.localData.category = $event;\n    })(\"selectionChange\", function DialogBoxComponent_div_3_Template_mat_select_selectionChange_9_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.onCategoryChange();\n    });\n    i0.ɵɵelementStart(10, \"mat-select-trigger\", 15)(11, \"mat-icon\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"span\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(15, DialogBoxComponent_div_3_mat_option_15_Template, 6, 3, \"mat-option\", 16);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"div\", 17)(17, \"mat-form-field\", 18)(18, \"mat-label\");\n    i0.ɵɵtext(19, \"Value\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"span\", 19)(21, \"mat-icon\");\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"input\", 20);\n    i0.ɵɵlistener(\"ngModelChange\", function DialogBoxComponent_div_3_Template_input_ngModelChange_23_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.localData.value = $event;\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(24, \"mat-form-field\", 18)(25, \"mat-label\");\n    i0.ɵɵtext(26, \"Choose a date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"input\", 21);\n    i0.ɵɵlistener(\"ngModelChange\", function DialogBoxComponent_div_3_Template_input_ngModelChange_27_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.localData.date = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(28, \"mat-datepicker-toggle\", 22)(29, \"ngx-mat-datetime-picker\", null, 23);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(31, \"mat-form-field\", 24)(32, \"mat-label\");\n    i0.ɵɵtext(33, \"Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(34, \"textarea\", 20);\n    i0.ɵɵlistener(\"ngModelChange\", function DialogBoxComponent_div_3_Template_textarea_ngModelChange_34_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.localData.description = $event;\n    });\n    i0.ɵɵelementEnd()()()()()();\n  }\n\n  if (rf & 2) {\n    const _r5 = i0.ɵɵreference(30);\n\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"src\", ctx_r3.localData.photo == null ? \"/assets/placeholders/receiptPlaceholder.jpg\" : ctx_r3.localData.photo, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.localData.category);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r3.localData.category.icon);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r3.localData.category.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.categories);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate(ctx_r3.type);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.localData.value);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngxMatDatetimePicker\", _r5)(\"ngModel\", ctx_r3.localData.date);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", _r5);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.localData.description);\n  }\n}\n\nexport let DialogBoxComponent = /*#__PURE__*/(() => {\n  class DialogBoxComponent {\n    constructor(categoriesService, dialogRef, data) {\n      this.categoriesService = categoriesService;\n      this.dialogRef = dialogRef;\n      this.data = data;\n    }\n\n    ngOnInit() {\n      this.localData = Object.assign({}, this.data);\n      this.action = this.localData.action;\n\n      if (this.action !== 'DELETE') {\n        // Because not needed for DELETE\n        if (this.action === 'ADD') {\n          // Because undefined for UPDATE (I DONT KNOW)\n          this.localData.category = new Category();\n        }\n\n        this.categoriesService.getAllCategories().subscribe(categories => {\n          this.categories = categories;\n\n          if (this.action === 'ADD') {\n            // Because undefined for ADD due to empty object this.data\n            this.localData.category = categories[0];\n            this.localData.date = new Date();\n            this.localData.value = null;\n            this.localData.description = null;\n          } else if (this.action === 'UPDATE') {\n            // Because needed to find and set chosen category for UPDATE\n            for (const category of this.categories) {\n              if (category.id === this.localData.category.id) {\n                this.localData.category = category;\n                break;\n              }\n            }\n          }\n\n          if (this.localData.category.group.id === 1) {\n            this.type = 'remove';\n          } else if (this.localData.category.group.id === 2) {\n            this.type = 'add';\n          } else {\n            this.type = '';\n          }\n        }, error => console.log(error));\n      }\n    }\n\n    onCategoryChange() {\n      if (this.localData.category.group.id === 1) {\n        this.type = 'remove';\n      } else if (this.localData.category.group.id === 2) {\n        this.type = 'add';\n      } else {\n        this.type = '';\n      }\n    }\n\n    doAction() {\n      this.dialogRef.close({\n        event: this.action,\n        data: this.localData\n      });\n    }\n\n    closeDialog() {\n      this.dialogRef.close({\n        event: 'Cancel'\n      });\n    }\n\n  }\n\n  DialogBoxComponent.ɵfac = function DialogBoxComponent_Factory(t) {\n    return new (t || DialogBoxComponent)(i0.ɵɵdirectiveInject(i1.CategoriesService), i0.ɵɵdirectiveInject(i2.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA, 8));\n  };\n\n  DialogBoxComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DialogBoxComponent,\n    selectors: [[\"app-dialog-box\"]],\n    decls: 10,\n    vars: 5,\n    consts: [[\"mat-dialog-title\", \"\", 4, \"ngIf\"], [\"mat-dialog-content\", \"\", 4, \"ngIf\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"end stretch\", 2, \"margin-top\", \"20px\"], [\"mat-dialog-actions\", \"\"], [\"mat-button\", \"\", \"mat-flat-button\", \"\", \"color\", \"warn\", 3, \"click\"], [\"mat-button\", \"\", \"mat-flat-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"mat-dialog-title\", \"\"], [\"mat-dialog-content\", \"\"], [\"fxLayout\", \"column\"], [\"fxLayout\", \"row\", \"fxLayoutGap\", \"20px\"], [\"fxFlex\", \"50\"], [1, \"photo\", 3, \"src\"], [\"fxFlex\", \"\", \"fxLayout\", \"column\"], [\"appearance\", \"outline\", 2, \"width\", \"100%\"], [\"name\", \"category\", 3, \"ngModel\", \"ngModelChange\", \"selectionChange\"], [1, \"category\"], [\"class\", \"category\", 3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"space-between\"], [\"appearance\", \"outline\", 2, \"width\", \"48%\"], [\"matPrefix\", \"\"], [\"matInput\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"matInput\", \"\", 3, \"ngxMatDatetimePicker\", \"ngModel\", \"ngModelChange\"], [\"matSuffix\", \"\", 3, \"for\"], [\"picker\", \"\"], [\"appearance\", \"outline\", 1, \"example-full-width\"], [1, \"category\", 3, \"value\"], [\"qwe\", \"\"]],\n    template: function DialogBoxComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, DialogBoxComponent_h1_0_Template, 2, 0, \"h1\", 0);\n        i0.ɵɵtemplate(1, DialogBoxComponent_h1_1_Template, 2, 0, \"h1\", 0);\n        i0.ɵɵtemplate(2, DialogBoxComponent_h1_2_Template, 2, 0, \"h1\", 0);\n        i0.ɵɵtemplate(3, DialogBoxComponent_div_3_Template, 35, 11, \"div\", 1);\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"div\", 3)(6, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function DialogBoxComponent_Template_button_click_6_listener() {\n          return ctx.closeDialog();\n        });\n        i0.ɵɵtext(7, \"Cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function DialogBoxComponent_Template_button_click_8_listener() {\n          return ctx.doAction();\n        });\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.action == \"ADD\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.action == \"UPDATE\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.action == \"DELETE\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.action != \"DELETE\");\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.action);\n      }\n    },\n    directives: [i3.NgIf, i2.MatDialogTitle, i2.MatDialogContent, i4.DefaultLayoutDirective, i4.DefaultLayoutGapDirective, i4.DefaultFlexDirective, i5.MatFormField, i5.MatLabel, i6.MatSelect, i7.NgControlStatus, i7.NgModel, i6.MatSelectTrigger, i8.MatIcon, i3.NgForOf, i9.MatOption, i4.DefaultLayoutAlignDirective, i5.MatPrefix, i10.MatInput, i7.DefaultValueAccessor, i11.NgxMatDatetimeInput, i12.MatDatepickerToggle, i5.MatSuffix, i11.NgxMatDatetimePicker, i2.MatDialogActions, i13.MatButton],\n    styles: [\".photo[_ngcontent-%COMP%]{width:100%}.category[_ngcontent-%COMP%]{width:100%;display:flex;align-items:center;justify-content:flex-start}.category[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{margin-right:8px}\"]\n  });\n  return DialogBoxComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}