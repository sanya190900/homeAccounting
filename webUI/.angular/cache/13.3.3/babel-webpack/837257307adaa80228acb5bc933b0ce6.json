{"ast":null,"code":"import { PeriodService } from '../../services/period/period.service';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Period } from '../../models/period/period.model';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { DialogBoxTransactionsComponent } from '../dialog-box-transactions/dialog-box-transactions.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/transactions/transactions.service\";\nimport * as i2 from \"../../services/dashboard/dashboard.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/flex-layout/flex\";\nimport * as i6 from \"@angular/material/card\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@angular/material/select\";\nimport * as i9 from \"@angular/forms\";\nimport * as i10 from \"@angular/material/core\";\nimport * as i11 from \"@angular/flex-layout/extended\";\nimport * as i12 from \"@angular/material/datepicker\";\nimport * as i13 from \"@angular/material/button\";\nimport * as i14 from \"@angular/material/input\";\nimport * as i15 from \"@angular/material/icon\";\nimport * as i16 from \"@angular/material/table\";\nimport * as i17 from \"@angular/material/sort\";\nimport * as i18 from \"@angular/material/paginator\";\nimport * as i19 from \"../page-not-found/page-not-found.component\";\nconst _c0 = [\"picker\"];\n\nfunction TransactionsComponent_div_0_mat_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const period_r17 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", period_r17.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", period_r17.viewValue, \" \");\n  }\n}\n\nfunction TransactionsComponent_div_0_th_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 37);\n    i0.ɵɵtext(1, \" Date \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TransactionsComponent_div_0_td_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 38);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r18 = ctx.$implicit;\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r7.parseDate(element_r18.date), \" \");\n  }\n}\n\nfunction TransactionsComponent_div_0_th_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 37);\n    i0.ɵɵtext(1, \" Value \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TransactionsComponent_div_0_td_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 38);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r19 = ctx.$implicit;\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", element_r19.value, \" \", ctx_r9.selectedWallet.currency, \" \");\n  }\n}\n\nfunction TransactionsComponent_div_0_th_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 39);\n    i0.ɵɵtext(1, \" Category \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TransactionsComponent_div_0_td_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 38)(1, \"div\", 40)(2, \"mat-icon\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const element_r20 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(element_r20.category.icon);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(element_r20.category.name);\n  }\n}\n\nfunction TransactionsComponent_div_0_th_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 41);\n    i0.ɵɵtext(1, \" Action \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TransactionsComponent_div_0_td_46_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 42)(1, \"button\", 43);\n    i0.ɵɵlistener(\"click\", function TransactionsComponent_div_0_td_46_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r23);\n      const element_r21 = restoredCtx.$implicit;\n      const ctx_r22 = i0.ɵɵnextContext(2);\n      return ctx_r22.openDialog(\"UPDATE\", element_r21);\n    });\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"edit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"button\", 44);\n    i0.ɵɵlistener(\"click\", function TransactionsComponent_div_0_td_46_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r23);\n      const element_r21 = restoredCtx.$implicit;\n      const ctx_r24 = i0.ɵɵnextContext(2);\n      return ctx_r24.openDialog(\"DELETE\", element_r21);\n    });\n    i0.ɵɵelementStart(5, \"mat-icon\");\n    i0.ɵɵtext(6, \"delete\");\n    i0.ɵɵelementEnd()()();\n  }\n}\n\nfunction TransactionsComponent_div_0_tr_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 45);\n  }\n}\n\nfunction TransactionsComponent_div_0_tr_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 46);\n  }\n}\n\nfunction TransactionsComponent_div_0_tr_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 47)(1, \"td\", 48);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r5 = i0.ɵɵreference(30);\n\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"No data matching the filter \\\"\", _r5.value, \"\\\"\");\n  }\n}\n\nconst _c1 = function () {\n  return [5, 10, 25, 100];\n};\n\nfunction TransactionsComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 2)(2, \"div\", 3)(3, \"mat-card\")(4, \"mat-form-field\", 4)(5, \"mat-label\");\n    i0.ɵɵtext(6, \"Period\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"mat-select\", 5);\n    i0.ɵɵlistener(\"ngModelChange\", function TransactionsComponent_div_0_Template_mat_select_ngModelChange_7_listener($event) {\n      i0.ɵɵrestoreView(_r27);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return ctx_r26.selectedPeriod = $event;\n    })(\"selectionChange\", function TransactionsComponent_div_0_Template_mat_select_selectionChange_7_listener() {\n      i0.ɵɵrestoreView(_r27);\n      const ctx_r28 = i0.ɵɵnextContext();\n      return ctx_r28.onPeriodChange();\n    });\n    i0.ɵɵtemplate(8, TransactionsComponent_div_0_mat_option_8_Template, 2, 2, \"mat-option\", 6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"mat-form-field\", 7)(10, \"mat-label\");\n    i0.ɵɵtext(11, \"Enter a date range\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"mat-date-range-input\", 8);\n    i0.ɵɵelement(13, \"input\", 9)(14, \"input\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"mat-datepicker-toggle\", 11);\n    i0.ɵɵelementStart(16, \"mat-date-range-picker\", 12, 13)(18, \"mat-date-range-picker-actions\")(19, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function TransactionsComponent_div_0_Template_button_click_19_listener() {\n      i0.ɵɵrestoreView(_r27);\n      const ctx_r29 = i0.ɵɵnextContext();\n      return ctx_r29.cancelCustomPeriod();\n    });\n    i0.ɵɵtext(20, \"Cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function TransactionsComponent_div_0_Template_button_click_21_listener() {\n      i0.ɵɵrestoreView(_r27);\n      const ctx_r30 = i0.ɵɵnextContext();\n      return ctx_r30.createCustomPeriod();\n    });\n    i0.ɵɵtext(22, \"Apply\");\n    i0.ɵɵelementEnd()()()()()();\n    i0.ɵɵelementStart(23, \"div\", 3)(24, \"mat-card\", 16)(25, \"div\", 17)(26, \"mat-form-field\", 18)(27, \"mat-label\");\n    i0.ɵɵtext(28, \"Filter\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"input\", 19, 20);\n    i0.ɵɵlistener(\"keyup\", function TransactionsComponent_div_0_Template_input_keyup_29_listener($event) {\n      i0.ɵɵrestoreView(_r27);\n      const ctx_r31 = i0.ɵɵnextContext();\n      return ctx_r31.applyFilter($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(31, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function TransactionsComponent_div_0_Template_button_click_31_listener() {\n      i0.ɵɵrestoreView(_r27);\n      const ctx_r32 = i0.ɵɵnextContext();\n      return ctx_r32.openDialog(\"ADD\", {});\n    });\n    i0.ɵɵelementStart(32, \"mat-icon\");\n    i0.ɵɵtext(33, \"add\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(34, \"table\", 22);\n    i0.ɵɵelementContainerStart(35, 23);\n    i0.ɵɵtemplate(36, TransactionsComponent_div_0_th_36_Template, 2, 0, \"th\", 24);\n    i0.ɵɵtemplate(37, TransactionsComponent_div_0_td_37_Template, 2, 1, \"td\", 25);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(38, 26);\n    i0.ɵɵtemplate(39, TransactionsComponent_div_0_th_39_Template, 2, 0, \"th\", 24);\n    i0.ɵɵtemplate(40, TransactionsComponent_div_0_td_40_Template, 2, 2, \"td\", 25);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(41, 27);\n    i0.ɵɵtemplate(42, TransactionsComponent_div_0_th_42_Template, 2, 0, \"th\", 28);\n    i0.ɵɵtemplate(43, TransactionsComponent_div_0_td_43_Template, 6, 2, \"td\", 25);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(44, 29);\n    i0.ɵɵtemplate(45, TransactionsComponent_div_0_th_45_Template, 2, 0, \"th\", 30);\n    i0.ɵɵtemplate(46, TransactionsComponent_div_0_td_46_Template, 7, 0, \"td\", 31);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵtemplate(47, TransactionsComponent_div_0_tr_47_Template, 1, 0, \"tr\", 32);\n    i0.ɵɵtemplate(48, TransactionsComponent_div_0_tr_48_Template, 1, 0, \"tr\", 33);\n    i0.ɵɵtemplate(49, TransactionsComponent_div_0_tr_49_Template, 3, 1, \"tr\", 34);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(50, \"mat-paginator\", 35);\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const _r4 = i0.ɵɵreference(17);\n\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.selectedPeriod);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.periods);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", ctx_r0.isHidden());\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"rangePicker\", _r4)(\"formGroup\", ctx_r0.range);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"for\", _r4);\n    i0.ɵɵadvance(19);\n    i0.ɵɵproperty(\"dataSource\", ctx_r0.dataSource);\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"matHeaderRowDef\", ctx_r0.displayedColumns);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matRowDefColumns\", ctx_r0.displayedColumns);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"pageSizeOptions\", i0.ɵɵpureFunction0(10, _c1));\n  }\n}\n\nfunction TransactionsComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r34 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function TransactionsComponent_ng_template_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r33 = i0.ɵɵnextContext();\n      return ctx_r33.openDialog(\"ADD\", {});\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"add\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(3, \"app-page-not-found\");\n  }\n}\n\nexport let TransactionsComponent = /*#__PURE__*/(() => {\n  class TransactionsComponent {\n    constructor(transactionsService, dashboardService, dialog) {\n      this.transactionsService = transactionsService;\n      this.dashboardService = dashboardService;\n      this.dialog = dialog;\n      this.periods = [{\n        value: PeriodService.getCurrentWeek(),\n        viewValue: 'Week'\n      }, {\n        value: PeriodService.getCurrentMonth(),\n        viewValue: 'Month'\n      }, {\n        value: PeriodService.getCurrentYear(),\n        viewValue: 'Year'\n      }, {\n        value: 'all',\n        viewValue: 'All'\n      }, {\n        value: 'custom',\n        viewValue: 'Custom'\n      }];\n      this.selectedPeriod = this.periods[1].value;\n      this.period = PeriodService.getCurrentMonth();\n      this.range = new FormGroup({\n        start: new FormControl(new Date(PeriodService.getCurrentWeek().start)),\n        end: new FormControl(new Date(PeriodService.getCurrentWeek().stop))\n      });\n      this.dataSource = new MatTableDataSource();\n      this.displayedColumns = ['date', 'value', 'category', 'action'];\n    }\n\n    ngOnInit() {\n      const lsw = localStorage.getItem('wallet');\n      this.selectedWallet = lsw !== null ? JSON.parse(lsw) : null;\n      this.updateData();\n    }\n\n    parseDate(date) {\n      return new Date(date).toLocaleString();\n    }\n\n    applyFilter(event) {\n      const filterValue = event.target.value;\n      console.log(filterValue);\n      this.dataSource.filter = filterValue;\n\n      if (this.dataSource.paginator) {\n        this.dataSource.paginator.firstPage();\n      }\n    }\n\n    openDialog(action, obj) {\n      obj.action = action;\n      const dialogRef = this.dialog.open(DialogBoxTransactionsComponent, {\n        width: '700px',\n        data: obj\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        if (result !== undefined) {\n          switch (result.event) {\n            case 'ADD':\n              this.addTransaction(result.data);\n              break;\n\n            case 'UPDATE':\n              this.updateTransaction(result.data);\n              break;\n\n            case 'DELETE':\n              this.deleteTransaction(result.data);\n              break;\n          }\n        }\n      });\n    }\n\n    addTransaction(data) {\n      const transaction = {\n        id: 0,\n        date: data.date,\n        description: data.description,\n        photo: '',\n        value: data.value,\n        wallet: this.selectedWallet,\n        category: data.category\n      };\n      this.transactionsService.addTransaction(transaction).subscribe(() => this.updateData(), error => console.log(error));\n    }\n\n    updateTransaction(data) {\n      const transaction = {\n        id: data.id,\n        date: data.date,\n        description: data.description,\n        photo: data.photo,\n        value: data.value,\n        wallet: this.selectedWallet,\n        category: data.category\n      };\n      this.transactionsService.updateTransaction(transaction).subscribe(() => this.updateData(), error => console.log(error));\n    }\n\n    deleteTransaction(data) {\n      this.transactionsService.deleteTransactionById(data.id).subscribe(() => this.updateData(), error => console.log(error));\n    }\n\n    updateData() {\n      this.transactionsService.getTransactionsByPeriodAndWallet(this.period, this.selectedWallet.id).subscribe(transactions => {\n        this.dataSource = new MatTableDataSource(transactions);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      }, error => console.log(error));\n    }\n\n    getAllData() {\n      this.dashboardService.getFirstTransactionDateByWallet(this.selectedWallet.id).subscribe(datetime => {\n        this.period = PeriodService.createPeriod(new Date(datetime), new Date());\n        this.updateData();\n      }, error => console.log(error));\n    }\n\n    onPeriodChange() {\n      var _a;\n\n      if (this.selectedPeriod instanceof Period) {\n        this.period = this.selectedPeriod;\n        this.updateData();\n      } else if (this.selectedPeriod === 'custom') {\n        (_a = this.datePicker) === null || _a === void 0 ? void 0 : _a.open();\n      } else {\n        this.getAllData();\n      }\n    }\n\n    createCustomPeriod() {\n      if (this.range.value.end !== null) {\n        this.period = PeriodService.createPeriod(new Date(this.range.value.start.getTime() - new Date().getTimezoneOffset() * 60 * 1000), new Date(this.range.value.end.getTime() - new Date().getTimezoneOffset() * 60 * 1000));\n        this.updateData();\n      }\n    }\n\n    isHidden() {\n      if (this.selectedPeriod !== 'custom') {\n        return {\n          width: 0,\n          visibility: 'hidden'\n        };\n      }\n\n      return null;\n    }\n\n    cancelCustomPeriod() {\n      this.selectedPeriod = this.periods[1].value;\n      this.onPeriodChange();\n    }\n\n  }\n\n  TransactionsComponent.ɵfac = function TransactionsComponent_Factory(t) {\n    return new (t || TransactionsComponent)(i0.ɵɵdirectiveInject(i1.TransactionsService), i0.ɵɵdirectiveInject(i2.DashboardService), i0.ɵɵdirectiveInject(i3.MatDialog));\n  };\n\n  TransactionsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TransactionsComponent,\n    selectors: [[\"app-transactions\"]],\n    viewQuery: function TransactionsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(MatPaginator, 5);\n        i0.ɵɵviewQuery(MatSort, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.datePicker = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n      }\n    },\n    decls: 3,\n    vars: 2,\n    consts: [[4, \"ngIf\", \"ngIfElse\"], [\"elseBlock\", \"\"], [\"fxLayout\", \"column\", \"fxLayoutGap\", \"20px\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"space-around center\"], [\"appearance\", \"outline\"], [\"name\", \"period\", 3, \"ngModel\", \"ngModelChange\", \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"appearance\", \"outline\", 2, \"margin-left\", \"20px\", 3, \"ngStyle\"], [3, \"rangePicker\", \"formGroup\"], [\"matStartDate\", \"\", \"formControlName\", \"start\"], [\"matEndDate\", \"\", \"formControlName\", \"end\"], [\"matSuffix\", \"\", 3, \"for\"], [\"touchUi\", \"\"], [\"picker\", \"\"], [\"mat-button\", \"\", \"matDateRangePickerCancel\", \"\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"matDateRangePickerApply\", \"\", 3, \"click\"], [2, \"width\", \"100%\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"space-between center\"], [\"appearance\", \"standard\", 1, \"filter\"], [\"matInput\", \"\", \"placeholder\", \"Ex. Mia\", 3, \"keyup\"], [\"input\", \"\"], [\"mat-button\", \"\", \"mat-flat-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"mat-table\", \"\", \"matSort\", \"\", 1, \"mat-elevation-z8\", 3, \"dataSource\"], [\"matColumnDef\", \"date\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"value\"], [\"matColumnDef\", \"category\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"matColumnDef\", \"action\"], [\"mat-header-cell\", \"\", \"style\", \"text-align: center;\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", \"style\", \"text-align: center;\", 4, \"matCellDef\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"class\", \"mat-row\", 4, \"matNoDataRow\"], [\"aria-label\", \"Select page of transactions\", 3, \"pageSizeOptions\"], [3, \"value\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\"], [\"mat-cell\", \"\"], [\"mat-header-cell\", \"\"], [1, \"category\"], [\"mat-header-cell\", \"\", 2, \"text-align\", \"center\"], [\"mat-cell\", \"\", 2, \"text-align\", \"center\"], [\"mat-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"mat-button\", \"\", \"color\", \"warn\", 3, \"click\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"], [1, \"mat-row\"], [\"colspan\", \"4\", 1, \"mat-cell\"]],\n    template: function TransactionsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, TransactionsComponent_div_0_Template, 51, 11, \"div\", 0);\n        i0.ɵɵtemplate(1, TransactionsComponent_ng_template_1_Template, 4, 0, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(2);\n\n        i0.ɵɵproperty(\"ngIf\", ctx.dataSource.data.length > 0)(\"ngIfElse\", _r1);\n      }\n    },\n    directives: [i4.NgIf, i5.DefaultLayoutDirective, i5.DefaultLayoutGapDirective, i5.DefaultLayoutAlignDirective, i6.MatCard, i7.MatFormField, i7.MatLabel, i8.MatSelect, i9.NgControlStatus, i9.NgModel, i4.NgForOf, i10.MatOption, i4.NgStyle, i11.DefaultStyleDirective, i12.MatDateRangeInput, i9.NgControlStatusGroup, i9.FormGroupDirective, i12.MatStartDate, i9.DefaultValueAccessor, i9.FormControlName, i12.MatEndDate, i12.MatDatepickerToggle, i7.MatSuffix, i12.MatDateRangePicker, i12.MatDatepickerActions, i13.MatButton, i12.MatDatepickerCancel, i12.MatDatepickerApply, i14.MatInput, i15.MatIcon, i16.MatTable, i17.MatSort, i16.MatColumnDef, i16.MatHeaderCellDef, i16.MatHeaderCell, i17.MatSortHeader, i16.MatCellDef, i16.MatCell, i16.MatHeaderRowDef, i16.MatHeaderRow, i16.MatRowDef, i16.MatRow, i16.MatNoDataRow, i18.MatPaginator, i19.PageNotFoundComponent],\n    styles: [\"table[_ngcontent-%COMP%]{width:100%}td[_ngcontent-%COMP%], th[_ngcontent-%COMP%]{width:25%}.filter[_ngcontent-%COMP%]{font-size:14px;width:50%}.addButton[_ngcontent-%COMP%]{float:right;margin-bottom:10px}.category[_ngcontent-%COMP%]{width:100%;display:flex;align-items:center;justify-content:flex-start}.category[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{margin-right:8px}\"]\n  });\n  return TransactionsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}