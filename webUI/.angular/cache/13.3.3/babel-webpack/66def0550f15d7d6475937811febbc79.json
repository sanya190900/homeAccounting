{"ast":null,"code":"import { Period } from '../../models/period/period.model';\nimport * as i0 from \"@angular/core\";\nexport let PeriodService = /*#__PURE__*/(() => {\n  class PeriodService {\n    constructor() {} // Creating period by start and stop values\n\n\n    static createPeriod(dateStart, dateStop) {\n      const period = new Period();\n      dateStart.setUTCHours(0, 0, 0, 0);\n      dateStop.setUTCHours(23, 59, 59, 999);\n      period.start = dateStart.toISOString();\n      period.stop = dateStop.toISOString();\n      return period;\n    } // Creating period for current week (from Monday to Sunday)\n\n\n    static getCurrentWeek() {\n      const date = new Date(); // Correcting first day of week to Monday instead of Sunday\n\n      const dateStart = new Date(date.getTime() - (new Date().getDay() - 1) * 24 * 60 * 60 * 1000 - date.getTimezoneOffset() * 60 * 1000);\n      const dateStop = new Date(date.getTime() + (6 - (new Date().getDay() - 1)) * 24 * 60 * 60 * 1000 - date.getTimezoneOffset() * 60 * 1000);\n      return this.createPeriod(dateStart, dateStop);\n    } // Creating period for current month (from 1 to last day of month)\n\n\n    static getCurrentMonth() {\n      const date = new Date();\n      const dateStart = new Date(date.getFullYear(), date.getMonth(), 2); // 2 -> 2 day of month - 2 hours = 1 day of month 22:00\n\n      const dateStop = new Date(date.getFullYear(), date.getMonth() + 1, 1); // getMonth + 1 -> next month, 1 -> 1 day of month - 2 hours = last day of previous month 22:00\n\n      return this.createPeriod(dateStart, dateStop);\n    } // Creating period for current year (from 1 to last day of year)\n\n\n    static getCurrentYear() {\n      const date = new Date();\n      const dateStart = new Date(date.getFullYear(), 0, 2);\n      const dateStop = new Date(date.getFullYear() + 1, 0, 1);\n      return this.createPeriod(dateStart, dateStop);\n    }\n\n  }\n\n  PeriodService.ɵfac = function PeriodService_Factory(t) {\n    return new (t || PeriodService)();\n  };\n\n  PeriodService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PeriodService,\n    factory: PeriodService.ɵfac,\n    providedIn: 'root'\n  });\n  return PeriodService;\n})();","map":null,"metadata":{},"sourceType":"module"}