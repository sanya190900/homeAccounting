{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { API_LINKS } from '../../const/api-links';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let DashboardService = /*#__PURE__*/(() => {\n  class DashboardService {\n    constructor(httpClient) {\n      this.httpClient = httpClient;\n    } // Initialize httpClient for requests\n    // Requesting usages by period and wallet\n\n\n    getUsageByPeriodAndWallet(period, idWallet) {\n      const params = new HttpParams().set('periodStart', period.start).set('periodStop', period.stop).set('idWallet', idWallet.toString());\n      return this.httpClient.get(API_LINKS.USAGE_BY_DATE_URL, {\n        params\n      });\n    } // Requesting usages by category group 'expenses' and wallet in period\n\n\n    getUsageByPeriodAndWalletGroupByCategoryExpenses(period, idWallet) {\n      const params = new HttpParams().set('periodStart', period.start).set('periodStop', period.stop).set('idWallet', idWallet.toString());\n      return this.httpClient.get(API_LINKS.USAGE_BY_CATEGORY_EXPENSES_URL, {\n        params\n      });\n    } // Requesting usages by category group 'income' and wallet in period\n\n\n    getUsageByPeriodAndWalletGroupByCategoryIncome(period, idWallet) {\n      const params = new HttpParams().set('periodStart', period.start).set('periodStop', period.stop).set('idWallet', idWallet.toString());\n      return this.httpClient.get(API_LINKS.USAGE_BY_CATEGORY_INCOME_URL, {\n        params\n      });\n    } // Requesting date time of first transaction by wallet\n\n\n    getFirstTransactionDateByWallet(idWallet) {\n      const params = new HttpParams().set('idWallet', idWallet.toString());\n      return this.httpClient.get(API_LINKS.FIRST_TRANSACTION_DATE_URL, {\n        params\n      });\n    }\n\n  }\n\n  DashboardService.ɵfac = function DashboardService_Factory(t) {\n    return new (t || DashboardService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  DashboardService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DashboardService,\n    factory: DashboardService.ɵfac,\n    providedIn: 'root'\n  });\n  return DashboardService;\n})();","map":null,"metadata":{},"sourceType":"module"}