{"ast":null,"code":"import { PeriodService } from '../../services/period/period.service';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Period } from '../../models/period/period.model';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { DialogBoxTransactionsComponent } from '../dialog-box-transactions/dialog-box-transactions.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/transactions/transactions.service\";\nimport * as i2 from \"../../services/dashboard/dashboard.service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@angular/flex-layout/flex\";\nimport * as i5 from \"@angular/material/card\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/select\";\nimport * as i8 from \"@angular/forms\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"@angular/material/core\";\nimport * as i11 from \"@angular/flex-layout/extended\";\nimport * as i12 from \"@angular/material/datepicker\";\nimport * as i13 from \"@angular/material/button\";\nimport * as i14 from \"@angular/material/input\";\nimport * as i15 from \"@angular/material/icon\";\nimport * as i16 from \"@angular/material/table\";\nimport * as i17 from \"@angular/material/sort\";\nimport * as i18 from \"@angular/material/paginator\";\nimport * as i19 from \"../page-not-found/page-not-found.component\";\nconst _c0 = [\"picker\"];\n\nfunction TransactionsComponent_mat_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const period_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", period_r7.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", period_r7.viewValue, \" \");\n  }\n}\n\nfunction TransactionsComponent_input_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"input\", 23);\n    i0.ɵɵlistener(\"keyup\", function TransactionsComponent_input_28_Template_input_keyup_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.applyFilter($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TransactionsComponent_table_32_th_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 37);\n    i0.ɵɵtext(1, \" Date \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TransactionsComponent_table_32_td_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 38);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r21 = ctx.$implicit;\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r11.parseDate(element_r21.date), \" \");\n  }\n}\n\nfunction TransactionsComponent_table_32_th_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 37);\n    i0.ɵɵtext(1, \" Value \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TransactionsComponent_table_32_td_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 38);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r22 = ctx.$implicit;\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", element_r22.value, \" \", ctx_r13.selectedWallet.currency, \" \");\n  }\n}\n\nfunction TransactionsComponent_table_32_th_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 39);\n    i0.ɵɵtext(1, \" Category \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TransactionsComponent_table_32_td_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 38)(1, \"div\", 40)(2, \"mat-icon\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const element_r23 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(element_r23.category.icon);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(element_r23.category.name);\n  }\n}\n\nfunction TransactionsComponent_table_32_th_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 41);\n    i0.ɵɵtext(1, \" Action \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TransactionsComponent_table_32_td_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\", 42)(1, \"button\", 43);\n    i0.ɵɵlistener(\"click\", function TransactionsComponent_table_32_td_12_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r26);\n      const element_r24 = restoredCtx.$implicit;\n      const ctx_r25 = i0.ɵɵnextContext(2);\n      return ctx_r25.openDialog(\"UPDATE\", element_r24);\n    });\n    i0.ɵɵelementStart(2, \"mat-icon\");\n    i0.ɵɵtext(3, \"edit\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"button\", 44);\n    i0.ɵɵlistener(\"click\", function TransactionsComponent_table_32_td_12_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r26);\n      const element_r24 = restoredCtx.$implicit;\n      const ctx_r27 = i0.ɵɵnextContext(2);\n      return ctx_r27.openDialog(\"DELETE\", element_r24);\n    });\n    i0.ɵɵelementStart(5, \"mat-icon\");\n    i0.ɵɵtext(6, \"delete\");\n    i0.ɵɵelementEnd()()();\n  }\n}\n\nfunction TransactionsComponent_table_32_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 45);\n  }\n}\n\nfunction TransactionsComponent_table_32_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 46);\n  }\n}\n\nfunction TransactionsComponent_table_32_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 47)(1, \"td\", 48);\n    i0.ɵɵtext(2, \"No data matching the filter\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction TransactionsComponent_table_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 24);\n    i0.ɵɵelementContainerStart(1, 25);\n    i0.ɵɵtemplate(2, TransactionsComponent_table_32_th_2_Template, 2, 0, \"th\", 26);\n    i0.ɵɵtemplate(3, TransactionsComponent_table_32_td_3_Template, 2, 1, \"td\", 27);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(4, 28);\n    i0.ɵɵtemplate(5, TransactionsComponent_table_32_th_5_Template, 2, 0, \"th\", 26);\n    i0.ɵɵtemplate(6, TransactionsComponent_table_32_td_6_Template, 2, 2, \"td\", 27);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(7, 29);\n    i0.ɵɵtemplate(8, TransactionsComponent_table_32_th_8_Template, 2, 0, \"th\", 30);\n    i0.ɵɵtemplate(9, TransactionsComponent_table_32_td_9_Template, 6, 2, \"td\", 27);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerStart(10, 31);\n    i0.ɵɵtemplate(11, TransactionsComponent_table_32_th_11_Template, 2, 0, \"th\", 32);\n    i0.ɵɵtemplate(12, TransactionsComponent_table_32_td_12_Template, 7, 0, \"td\", 33);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵtemplate(13, TransactionsComponent_table_32_tr_13_Template, 1, 0, \"tr\", 34);\n    i0.ɵɵtemplate(14, TransactionsComponent_table_32_tr_14_Template, 1, 0, \"tr\", 35);\n    i0.ɵɵtemplate(15, TransactionsComponent_table_32_tr_15_Template, 3, 0, \"tr\", 36);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"dataSource\", ctx_r3.dataSource);\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"matHeaderRowDef\", ctx_r3.displayedColumns);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matRowDefColumns\", ctx_r3.displayedColumns);\n  }\n}\n\nconst _c1 = function () {\n  return [5, 10, 25, 100];\n};\n\nfunction TransactionsComponent_mat_paginator_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-paginator\", 49);\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"pageSizeOptions\", i0.ɵɵpureFunction0(1, _c1));\n  }\n}\n\nfunction TransactionsComponent_ng_template_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-page-not-found\");\n  }\n}\n\nexport let TransactionsComponent = /*#__PURE__*/(() => {\n  class TransactionsComponent {\n    constructor(transactionsService, dashboardService, dialog) {\n      this.transactionsService = transactionsService;\n      this.dashboardService = dashboardService;\n      this.dialog = dialog;\n      this.periods = [{\n        value: PeriodService.getCurrentWeek(),\n        viewValue: 'Week'\n      }, {\n        value: PeriodService.getCurrentMonth(),\n        viewValue: 'Month'\n      }, {\n        value: PeriodService.getCurrentYear(),\n        viewValue: 'Year'\n      }, {\n        value: 'all',\n        viewValue: 'All'\n      }, {\n        value: 'custom',\n        viewValue: 'Custom'\n      }];\n      this.selectedPeriod = this.periods[1].value;\n      this.period = PeriodService.getCurrentMonth();\n      this.range = new FormGroup({\n        start: new FormControl(new Date(PeriodService.getCurrentWeek().start)),\n        end: new FormControl(new Date(PeriodService.getCurrentWeek().stop))\n      });\n      this.dataSource = new MatTableDataSource();\n      this.displayedColumns = ['date', 'value', 'category', 'action'];\n    }\n\n    ngOnInit() {\n      const lsw = localStorage.getItem('wallet');\n      this.selectedWallet = lsw !== null ? JSON.parse(lsw) : null;\n      this.updateData();\n    }\n\n    parseDate(date) {\n      return new Date(date).toLocaleString();\n    }\n\n    applyFilter(event) {\n      const filterValue = event.target.value;\n      this.dataSource.filter = filterValue.trim().toLowerCase();\n\n      if (this.dataSource.paginator) {\n        this.dataSource.paginator.firstPage();\n      }\n    }\n\n    openDialog(action, obj) {\n      obj.action = action;\n      const dialogRef = this.dialog.open(DialogBoxTransactionsComponent, {\n        width: '700px',\n        data: obj\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        if (result !== undefined) {\n          switch (result.event) {\n            case 'ADD':\n              this.addTransaction(result.data);\n              break;\n\n            case 'UPDATE':\n              this.updateTransaction(result.data);\n              break;\n\n            case 'DELETE':\n              this.deleteTransaction(result.data);\n              break;\n          }\n        }\n      });\n    }\n\n    addTransaction(data) {\n      const transaction = {\n        id: 0,\n        date: data.date,\n        description: data.description,\n        photo: '',\n        value: data.value,\n        wallet: this.selectedWallet,\n        category: data.category\n      };\n      this.transactionsService.addTransaction(transaction).subscribe(() => this.updateData(), error => console.log(error));\n    }\n\n    updateTransaction(data) {\n      const transaction = {\n        id: data.id,\n        date: data.date,\n        description: data.description,\n        photo: data.photo,\n        value: data.value,\n        wallet: this.selectedWallet,\n        category: data.category\n      };\n      this.transactionsService.updateTransaction(transaction).subscribe(() => this.updateData(), error => console.log(error));\n    }\n\n    deleteTransaction(data) {\n      this.transactionsService.deleteTransactionById(data.id).subscribe(() => this.updateData(), error => console.log(error));\n    }\n\n    updateData() {\n      this.transactionsService.getTransactionsByPeriodAndWallet(this.period, this.selectedWallet.id).subscribe(transactions => {\n        this.dataSource = new MatTableDataSource(transactions);\n        this.dataSource.paginator = this.paginator;\n        this.dataSource.sort = this.sort;\n      }, error => console.log(error));\n    }\n\n    getAllData() {\n      this.dashboardService.getFirstTransactionDateByWallet(this.selectedWallet.id).subscribe(datetime => {\n        this.period = PeriodService.createPeriod(new Date(datetime), new Date());\n        this.updateData();\n      }, error => console.log(error));\n    }\n\n    onPeriodChange() {\n      var _a;\n\n      if (this.selectedPeriod instanceof Period) {\n        this.period = this.selectedPeriod;\n        this.updateData();\n      } else if (this.selectedPeriod === 'custom') {\n        (_a = this.datePicker) === null || _a === void 0 ? void 0 : _a.open();\n      } else {\n        this.getAllData();\n      }\n    }\n\n    createCustomPeriod() {\n      if (this.range.value.end !== null) {\n        this.period = PeriodService.createPeriod(new Date(this.range.value.start.getTime() - new Date().getTimezoneOffset() * 60 * 1000), new Date(this.range.value.end.getTime() - new Date().getTimezoneOffset() * 60 * 1000));\n        this.updateData();\n      }\n    }\n\n    isHidden() {\n      if (this.selectedPeriod !== 'custom') {\n        return {\n          width: 0,\n          visibility: 'hidden'\n        };\n      }\n\n      return null;\n    }\n\n    cancelCustomPeriod() {\n      this.selectedPeriod = this.periods[1].value;\n      this.onPeriodChange();\n    }\n\n  }\n\n  TransactionsComponent.ɵfac = function TransactionsComponent_Factory(t) {\n    return new (t || TransactionsComponent)(i0.ɵɵdirectiveInject(i1.TransactionsService), i0.ɵɵdirectiveInject(i2.DashboardService), i0.ɵɵdirectiveInject(i3.MatDialog));\n  };\n\n  TransactionsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TransactionsComponent,\n    selectors: [[\"app-transactions\"]],\n    viewQuery: function TransactionsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(MatPaginator, 5);\n        i0.ɵɵviewQuery(MatSort, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.datePicker = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n      }\n    },\n    decls: 36,\n    vars: 10,\n    consts: [[\"fxLayout\", \"column\", \"fxLayoutGap\", \"20px\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"space-around center\"], [\"appearance\", \"outline\"], [\"name\", \"period\", 3, \"ngModel\", \"ngModelChange\", \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"appearance\", \"outline\", 2, \"margin-left\", \"20px\", 3, \"ngStyle\"], [3, \"rangePicker\", \"formGroup\"], [\"matStartDate\", \"\", \"formControlName\", \"start\"], [\"matEndDate\", \"\", \"formControlName\", \"end\"], [\"matSuffix\", \"\", 3, \"for\"], [\"touchUi\", \"\"], [\"picker\", \"\"], [\"mat-button\", \"\", \"matDateRangePickerCancel\", \"\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"matDateRangePickerApply\", \"\", 3, \"click\"], [2, \"width\", \"100%\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"space-between center\"], [\"appearance\", \"standard\", 1, \"filter\"], [\"matInput\", \"\", \"placeholder\", \"Ex. Mia\", 3, \"keyup\", 4, \"ngIf\"], [\"mat-button\", \"\", \"mat-flat-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"mat-table\", \"\", \"class\", \"mat-elevation-z8\", \"matSort\", \"\", 3, \"dataSource\", 4, \"ngIf\", \"ngIfElse\"], [\"aria-label\", \"Select page of transactions\", 3, \"pageSizeOptions\", 4, \"ngIf\"], [\"elseBlock\", \"\"], [3, \"value\"], [\"matInput\", \"\", \"placeholder\", \"Ex. Mia\", 3, \"keyup\"], [\"mat-table\", \"\", \"matSort\", \"\", 1, \"mat-elevation-z8\", 3, \"dataSource\"], [\"matColumnDef\", \"date\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"value\"], [\"matColumnDef\", \"category\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"matColumnDef\", \"action\"], [\"mat-header-cell\", \"\", \"style\", \"text-align: center;\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", \"style\", \"text-align: center;\", 4, \"matCellDef\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"class\", \"mat-row\", 4, \"matNoDataRow\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\"], [\"mat-cell\", \"\"], [\"mat-header-cell\", \"\"], [1, \"category\"], [\"mat-header-cell\", \"\", 2, \"text-align\", \"center\"], [\"mat-cell\", \"\", 2, \"text-align\", \"center\"], [\"mat-button\", \"\", \"color\", \"primary\", 3, \"click\"], [\"mat-button\", \"\", \"color\", \"warn\", 3, \"click\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"], [1, \"mat-row\"], [\"colspan\", \"4\", 1, \"mat-cell\"], [\"aria-label\", \"Select page of transactions\", 3, \"pageSizeOptions\"]],\n    template: function TransactionsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"mat-card\")(3, \"mat-form-field\", 2)(4, \"mat-label\");\n        i0.ɵɵtext(5, \"Period\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"mat-select\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function TransactionsComponent_Template_mat_select_ngModelChange_6_listener($event) {\n          return ctx.selectedPeriod = $event;\n        })(\"selectionChange\", function TransactionsComponent_Template_mat_select_selectionChange_6_listener() {\n          return ctx.onPeriodChange();\n        });\n        i0.ɵɵtemplate(7, TransactionsComponent_mat_option_7_Template, 2, 2, \"mat-option\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"mat-form-field\", 5)(9, \"mat-label\");\n        i0.ɵɵtext(10, \"Enter a date range\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mat-date-range-input\", 6);\n        i0.ɵɵelement(12, \"input\", 7)(13, \"input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"mat-datepicker-toggle\", 9);\n        i0.ɵɵelementStart(15, \"mat-date-range-picker\", 10, 11)(17, \"mat-date-range-picker-actions\")(18, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function TransactionsComponent_Template_button_click_18_listener() {\n          return ctx.cancelCustomPeriod();\n        });\n        i0.ɵɵtext(19, \"Cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function TransactionsComponent_Template_button_click_20_listener() {\n          return ctx.createCustomPeriod();\n        });\n        i0.ɵɵtext(21, \"Apply\");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(22, \"div\", 1)(23, \"mat-card\", 14)(24, \"div\", 15)(25, \"mat-form-field\", 16)(26, \"mat-label\");\n        i0.ɵɵtext(27, \"Filter\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(28, TransactionsComponent_input_28_Template, 1, 0, \"input\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"button\", 18);\n        i0.ɵɵlistener(\"click\", function TransactionsComponent_Template_button_click_29_listener() {\n          return ctx.openDialog(\"ADD\", {});\n        });\n        i0.ɵɵelementStart(30, \"mat-icon\");\n        i0.ɵɵtext(31, \"add\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(32, TransactionsComponent_table_32_Template, 16, 3, \"table\", 19);\n        i0.ɵɵtemplate(33, TransactionsComponent_mat_paginator_33_Template, 1, 2, \"mat-paginator\", 20);\n        i0.ɵɵtemplate(34, TransactionsComponent_ng_template_34_Template, 1, 0, \"ng-template\", null, 21, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(16);\n\n        const _r5 = i0.ɵɵreference(35);\n\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedPeriod);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.periods);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngStyle\", ctx.isHidden());\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"rangePicker\", _r1)(\"formGroup\", ctx.range);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"for\", _r1);\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngIf\", ctx.dataSource.data.length > 0);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.dataSource.data.length > 0)(\"ngIfElse\", _r5);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.dataSource.data.length > 0);\n      }\n    },\n    directives: [i4.DefaultLayoutDirective, i4.DefaultLayoutGapDirective, i4.DefaultLayoutAlignDirective, i5.MatCard, i6.MatFormField, i6.MatLabel, i7.MatSelect, i8.NgControlStatus, i8.NgModel, i9.NgForOf, i10.MatOption, i9.NgStyle, i11.DefaultStyleDirective, i12.MatDateRangeInput, i8.NgControlStatusGroup, i8.FormGroupDirective, i12.MatStartDate, i8.DefaultValueAccessor, i8.FormControlName, i12.MatEndDate, i12.MatDatepickerToggle, i6.MatSuffix, i12.MatDateRangePicker, i12.MatDatepickerActions, i13.MatButton, i12.MatDatepickerCancel, i12.MatDatepickerApply, i9.NgIf, i14.MatInput, i15.MatIcon, i16.MatTable, i17.MatSort, i16.MatColumnDef, i16.MatHeaderCellDef, i16.MatHeaderCell, i17.MatSortHeader, i16.MatCellDef, i16.MatCell, i16.MatHeaderRowDef, i16.MatHeaderRow, i16.MatRowDef, i16.MatRow, i16.MatNoDataRow, i18.MatPaginator, i19.PageNotFoundComponent],\n    styles: [\"table[_ngcontent-%COMP%]{width:100%}td[_ngcontent-%COMP%], th[_ngcontent-%COMP%]{width:25%}.filter[_ngcontent-%COMP%]{font-size:14px;width:50%}.addButton[_ngcontent-%COMP%]{float:right;margin-bottom:10px}.category[_ngcontent-%COMP%]{width:100%;display:flex;align-items:center;justify-content:flex-start}.category[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{margin-right:8px}\"]\n  });\n  return TransactionsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}