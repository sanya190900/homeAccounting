{"ast":null,"code":"import { PeriodService } from '../../services/period/period.service';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Period } from '../../models/period/period.model';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/flex-layout/flex\";\nimport * as i2 from \"@angular/material/card\";\nimport * as i3 from \"@angular/material/form-field\";\nimport * as i4 from \"@angular/material/select\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/core\";\nimport * as i8 from \"@angular/flex-layout/extended\";\nimport * as i9 from \"@angular/material/datepicker\";\nimport * as i10 from \"@angular/material/button\";\nimport * as i11 from \"@angular/material/table\";\nimport * as i12 from \"@angular/material/sort\";\nimport * as i13 from \"@angular/material/paginator\";\nconst _c0 = [\"picker\"];\n\nfunction TransactionsComponent_mat_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const period_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", period_r9.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", period_r9.viewValue, \" \");\n  }\n}\n\nfunction TransactionsComponent_th_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 25);\n    i0.ɵɵtext(1, \" ID. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TransactionsComponent_td_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r10 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r10.id, \" \");\n  }\n}\n\nfunction TransactionsComponent_th_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 25);\n    i0.ɵɵtext(1, \" Name \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TransactionsComponent_td_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const element_r11 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", element_r11.name, \" \");\n  }\n}\n\nfunction TransactionsComponent_tr_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 27);\n  }\n}\n\nfunction TransactionsComponent_tr_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 28);\n  }\n}\n\nconst _c1 = function () {\n  return [5, 10, 25, 100];\n};\n\nexport let TransactionsComponent = /*#__PURE__*/(() => {\n  class TransactionsComponent {\n    constructor() {\n      this.periods = [{\n        value: PeriodService.getCurrentWeek(),\n        viewValue: 'Week'\n      }, {\n        value: PeriodService.getCurrentMonth(),\n        viewValue: 'Month'\n      }, {\n        value: PeriodService.getCurrentYear(),\n        viewValue: 'Year'\n      }, {\n        value: 'all',\n        viewValue: 'All'\n      }, {\n        value: 'custom',\n        viewValue: 'Custom'\n      }];\n      this.selectedPeriod = this.periods[1].value;\n      this.period = PeriodService.getCurrentMonth();\n      this.range = new FormGroup({\n        start: new FormControl(new Date(PeriodService.getCurrentWeek().start)),\n        end: new FormControl(new Date(PeriodService.getCurrentWeek().stop))\n      });\n      this.dataSource = [{\n        id: 1560608769632,\n        name: 'Artificial Intelligence'\n      }, {\n        id: 1560608796014,\n        name: 'Machine Learning'\n      }, {\n        id: 1560608787815,\n        name: 'Robotic Process Automation'\n      }, {\n        id: 1560608805101,\n        name: 'Blockchain'\n      }];\n      this.displayedColumns = ['id', 'name'];\n    }\n\n    ngOnInit() {\n      this.dataSource.paginator = this.paginator;\n      this.dataSource.sort = this.sort;\n      const lsw = localStorage.getItem('wallet');\n      this.selectedWallet = lsw !== null ? JSON.parse(lsw) : null;\n      console.log(this.selectedWallet);\n      this.updateData();\n    }\n\n    updateData() {}\n\n    getAllData() {}\n\n    onPeriodChange() {\n      var _a;\n\n      if (this.selectedPeriod instanceof Period) {\n        this.period = this.selectedPeriod;\n        this.updateData();\n      } else if (this.selectedPeriod === 'custom') {\n        (_a = this.datePicker) === null || _a === void 0 ? void 0 : _a.open();\n      } else {\n        this.getAllData();\n      }\n    }\n\n    createCustomPeriod() {\n      if (this.range.value.end !== null) {\n        this.period = PeriodService.createPeriod(new Date(this.range.value.start.getTime() - new Date().getTimezoneOffset() * 60 * 1000), new Date(this.range.value.end.getTime() - new Date().getTimezoneOffset() * 60 * 1000));\n        this.updateData();\n      }\n    }\n\n    isHidden() {\n      if (this.selectedPeriod !== 'custom') {\n        return {\n          width: 0,\n          visibility: 'hidden'\n        };\n      }\n\n      return null;\n    }\n\n    cancelCustomPeriod() {\n      this.selectedPeriod = this.periods[1].value;\n      this.onPeriodChange();\n    }\n\n  }\n\n  TransactionsComponent.ɵfac = function TransactionsComponent_Factory(t) {\n    return new (t || TransactionsComponent)();\n  };\n\n  TransactionsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TransactionsComponent,\n    selectors: [[\"app-transactions\"]],\n    viewQuery: function TransactionsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(MatPaginator, 5);\n        i0.ɵɵviewQuery(MatSort, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.datePicker = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n      }\n    },\n    decls: 36,\n    vars: 11,\n    consts: [[\"fxLayout\", \"row\", \"fxLayoutAlign\", \"space-around center\"], [\"appearance\", \"outline\", 2, \"margin-left\", \"20px\"], [\"name\", \"period\", 3, \"ngModel\", \"ngModelChange\", \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"appearance\", \"outline\", 2, \"margin-left\", \"20px\", 3, \"ngStyle\"], [3, \"rangePicker\", \"formGroup\"], [\"matStartDate\", \"\", \"formControlName\", \"start\"], [\"matEndDate\", \"\", \"formControlName\", \"end\"], [\"matSuffix\", \"\", 3, \"for\"], [\"touchUi\", \"\"], [\"picker\", \"\"], [\"mat-button\", \"\", \"matDateRangePickerCancel\", \"\", 3, \"click\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"matDateRangePickerApply\", \"\", 3, \"click\"], [\"fxLayout\", \"row\", \"fxLayoutAlign\", \"space-around center\", 2, \"margin\", \"20px\"], [\"mat-button\", \"\", \"mat-flat-button\", \"\", \"color\", \"primary\"], [\"mat-table\", \"\", \"matSort\", \"\", 1, \"mat-elevation-z8\", 3, \"dataSource\"], [\"mytable\", \"\"], [\"matColumnDef\", \"id\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"name\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"aria-label\", \"Select page of users\", 3, \"pageSizeOptions\"], [3, \"value\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\"], [\"mat-cell\", \"\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n    template: function TransactionsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-card\")(2, \"mat-form-field\", 1)(3, \"mat-label\");\n        i0.ɵɵtext(4, \"Period\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"mat-select\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function TransactionsComponent_Template_mat_select_ngModelChange_5_listener($event) {\n          return ctx.selectedPeriod = $event;\n        })(\"selectionChange\", function TransactionsComponent_Template_mat_select_selectionChange_5_listener() {\n          return ctx.onPeriodChange();\n        });\n        i0.ɵɵtemplate(6, TransactionsComponent_mat_option_6_Template, 2, 2, \"mat-option\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"mat-form-field\", 4)(8, \"mat-label\");\n        i0.ɵɵtext(9, \"Enter a date range\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"mat-date-range-input\", 5);\n        i0.ɵɵelement(11, \"input\", 6)(12, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"mat-datepicker-toggle\", 8);\n        i0.ɵɵelementStart(14, \"mat-date-range-picker\", 9, 10)(16, \"mat-date-range-picker-actions\")(17, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function TransactionsComponent_Template_button_click_17_listener() {\n          return ctx.cancelCustomPeriod();\n        });\n        i0.ɵɵtext(18, \"Cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function TransactionsComponent_Template_button_click_19_listener() {\n          return ctx.createCustomPeriod();\n        });\n        i0.ɵɵtext(20, \"Apply\");\n        i0.ɵɵelementEnd()()()()()();\n        i0.ɵɵelementStart(21, \"div\", 13)(22, \"mat-card\")(23, \"button\", 14);\n        i0.ɵɵtext(24, \"Add Row\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"table\", 15, 16);\n        i0.ɵɵelementContainerStart(27, 17);\n        i0.ɵɵtemplate(28, TransactionsComponent_th_28_Template, 2, 0, \"th\", 18);\n        i0.ɵɵtemplate(29, TransactionsComponent_td_29_Template, 2, 1, \"td\", 19);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(30, 20);\n        i0.ɵɵtemplate(31, TransactionsComponent_th_31_Template, 2, 0, \"th\", 18);\n        i0.ɵɵtemplate(32, TransactionsComponent_td_32_Template, 2, 1, \"td\", 19);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtemplate(33, TransactionsComponent_tr_33_Template, 1, 0, \"tr\", 21);\n        i0.ɵɵtemplate(34, TransactionsComponent_tr_34_Template, 1, 0, \"tr\", 22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(35, \"mat-paginator\", 23);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(15);\n\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedPeriod);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.periods);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngStyle\", ctx.isHidden());\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"rangePicker\", _r1)(\"formGroup\", ctx.range);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"for\", _r1);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"pageSizeOptions\", i0.ɵɵpureFunction0(10, _c1));\n      }\n    },\n    directives: [i1.DefaultLayoutDirective, i1.DefaultLayoutAlignDirective, i2.MatCard, i3.MatFormField, i3.MatLabel, i4.MatSelect, i5.NgControlStatus, i5.NgModel, i6.NgForOf, i7.MatOption, i6.NgStyle, i8.DefaultStyleDirective, i9.MatDateRangeInput, i5.NgControlStatusGroup, i5.FormGroupDirective, i9.MatStartDate, i5.DefaultValueAccessor, i5.FormControlName, i9.MatEndDate, i9.MatDatepickerToggle, i3.MatSuffix, i9.MatDateRangePicker, i9.MatDatepickerActions, i10.MatButton, i9.MatDatepickerCancel, i9.MatDatepickerApply, i11.MatTable, i12.MatSort, i11.MatColumnDef, i11.MatHeaderCellDef, i11.MatHeaderCell, i12.MatSortHeader, i11.MatCellDef, i11.MatCell, i11.MatHeaderRowDef, i11.MatHeaderRow, i11.MatRowDef, i11.MatRow, i13.MatPaginator],\n    styles: [\"\"]\n  });\n  return TransactionsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}